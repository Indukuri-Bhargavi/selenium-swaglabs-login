<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-09T17:46:40 IST" name="All Tests" finished-at="2025-09-09T17:47:10 IST" duration-ms="29932">
    <groups>
    </groups>
    <test started-at="2025-09-09T17:46:40 IST" name="SwagLabs Tests" finished-at="2025-09-09T17:47:10 IST" duration-ms="29932">
      <class name="testcases.ValidLoginTest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:testcases.ValidLoginTest@3e62d773]" started-at="2025-09-09T17:46:41 IST" name="setUp" finished-at="2025-09-09T17:46:51 IST" duration-ms="10357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:testcases.ValidLoginTest@3e62d773]" started-at="2025-09-09T17:46:41 IST" name="setUp" finished-at="2025-09-09T17:46:49 IST" duration-ms="7742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:testcases.ValidLoginTest@3e62d773]" started-at="2025-09-09T17:46:41 IST" name="setUp" finished-at="2025-09-09T17:46:51 IST" duration-ms="9669" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginWithMultipleUsers(java.lang.String,java.lang.String)[pri:0, instance:testcases.ValidLoginTest@3e62d773]" started-at="2025-09-09T17:46:49 IST" name="loginWithMultipleUsers" data-provider="loginData" finished-at="2025-09-09T17:46:59 IST" duration-ms="9904" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[locked_out_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at testcases.ValidLoginTest.loginWithMultipleUsers(ValidLoginTest.java:31)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1575)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithMultipleUsers -->
        <test-method signature="loginWithMultipleUsers(java.lang.String,java.lang.String)[pri:0, instance:testcases.ValidLoginTest@3e62d773]" started-at="2025-09-09T17:46:51 IST" name="loginWithMultipleUsers" data-provider="loginData" finished-at="2025-09-09T17:46:59 IST" duration-ms="8740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[problem_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithMultipleUsers -->
        <test-method signature="loginWithMultipleUsers(java.lang.String,java.lang.String)[pri:0, instance:testcases.ValidLoginTest@3e62d773]" started-at="2025-09-09T17:46:51 IST" name="loginWithMultipleUsers" data-provider="loginData" finished-at="2025-09-09T17:47:00 IST" duration-ms="8535" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithMultipleUsers -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.ValidLoginTest@3e62d773]" started-at="2025-09-09T17:46:59 IST" name="tearDown" finished-at="2025-09-09T17:47:06 IST" duration-ms="7079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.ValidLoginTest@3e62d773]" started-at="2025-09-09T17:46:59 IST" name="tearDown" finished-at="2025-09-09T17:47:07 IST" duration-ms="7145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.ValidLoginTest@3e62d773]" started-at="2025-09-09T17:47:00 IST" name="tearDown" finished-at="2025-09-09T17:47:06 IST" duration-ms="6573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.ValidLoginTest -->
      <class name="testcases.InvalidLoginTest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:testcases.InvalidLoginTest@1b410b60]" started-at="2025-09-09T17:46:41 IST" name="setUp" finished-at="2025-09-09T17:46:48 IST" duration-ms="7082" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginWithInvalidCredentials(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testcases.InvalidLoginTest@1b410b60]" started-at="2025-09-09T17:46:48 IST" name="loginWithInvalidCredentials" data-provider="negativeLoginData" finished-at="2025-09-09T17:46:54 IST" duration-ms="6095" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong_pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Epic sadface: Username and password do not match any user in this service]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.InvalidLoginTest@1b410b60]" started-at="2025-09-09T17:46:54 IST" name="tearDown" finished-at="2025-09-09T17:46:58 IST" duration-ms="3596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:testcases.InvalidLoginTest@1b410b60]" started-at="2025-09-09T17:46:58 IST" name="setUp" finished-at="2025-09-09T17:47:00 IST" duration-ms="2573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginWithInvalidCredentials(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testcases.InvalidLoginTest@1b410b60]" started-at="2025-09-09T17:47:00 IST" name="loginWithInvalidCredentials" data-provider="negativeLoginData" finished-at="2025-09-09T17:47:04 IST" duration-ms="3921" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[locked_out_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Epic sadface: Sorry, this user has been locked out.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.InvalidLoginTest@1b410b60]" started-at="2025-09-09T17:47:04 IST" name="tearDown" finished-at="2025-09-09T17:47:06 IST" duration-ms="1892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:testcases.InvalidLoginTest@1b410b60]" started-at="2025-09-09T17:47:06 IST" name="setUp" finished-at="2025-09-09T17:47:08 IST" duration-ms="2212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginWithInvalidCredentials(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testcases.InvalidLoginTest@1b410b60]" started-at="2025-09-09T17:47:08 IST" name="loginWithInvalidCredentials" data-provider="negativeLoginData" finished-at="2025-09-09T17:47:09 IST" duration-ms="601" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[wrong_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong_pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Epic sadface: Username and password do not match any user in this service]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.InvalidLoginTest@1b410b60]" started-at="2025-09-09T17:47:09 IST" name="tearDown" finished-at="2025-09-09T17:47:10 IST" duration-ms="648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.InvalidLoginTest -->
      <class name="testcases.E2EFlowTest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:testcases.E2EFlowTest@2462cb01]" started-at="2025-09-09T17:46:40 IST" name="setUp" finished-at="2025-09-09T17:46:52 IST" duration-ms="12640" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginAddToCartCheckout()[pri:0, instance:testcases.E2EFlowTest@2462cb01]" started-at="2025-09-09T17:46:52 IST" name="loginAddToCartCheckout" finished-at="2025-09-09T17:47:04 IST" duration-ms="11051" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAddToCartCheckout -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.E2EFlowTest@2462cb01]" started-at="2025-09-09T17:47:04 IST" name="tearDown" finished-at="2025-09-09T17:47:08 IST" duration-ms="4199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.E2EFlowTest -->
    </test> <!-- SwagLabs Tests -->
  </suite> <!-- All Tests -->
</testng-results>
