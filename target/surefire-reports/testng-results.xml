<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="6" total="12" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-09T13:55:13 IST" name="Surefire suite" finished-at="2025-09-09T13:55:46 IST" duration-ms="33339">
    <groups>
    </groups>
    <test started-at="2025-09-09T13:55:13 IST" name="Surefire test" finished-at="2025-09-09T13:55:46 IST" duration-ms="33339">
      <class name="testcases.ValidLoginTest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:testcases.ValidLoginTest@451001e5]" started-at="2025-09-09T13:55:29 IST" name="setUp" finished-at="2025-09-09T13:55:35 IST" duration-ms="6319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:testcases.ValidLoginTest@451001e5]" started-at="2025-09-09T13:55:29 IST" name="setUp" finished-at="2025-09-09T13:55:35 IST" duration-ms="6435" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:testcases.ValidLoginTest@451001e5]" started-at="2025-09-09T13:55:29 IST" name="setUp" finished-at="2025-09-09T13:55:33 IST" duration-ms="3847" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginWithMultipleUsers(java.lang.String,java.lang.String)[pri:0, instance:testcases.ValidLoginTest@451001e5]" started-at="2025-09-09T13:55:33 IST" name="loginWithMultipleUsers" data-provider="loginData" finished-at="2025-09-09T13:55:41 IST" duration-ms="7990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithMultipleUsers -->
        <test-method signature="loginWithMultipleUsers(java.lang.String,java.lang.String)[pri:0, instance:testcases.ValidLoginTest@451001e5]" started-at="2025-09-09T13:55:35 IST" name="loginWithMultipleUsers" data-provider="loginData" finished-at="2025-09-09T13:55:44 IST" duration-ms="8535" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[problem_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithMultipleUsers -->
        <test-method signature="loginWithMultipleUsers(java.lang.String,java.lang.String)[pri:0, instance:testcases.ValidLoginTest@451001e5]" started-at="2025-09-09T13:55:35 IST" name="loginWithMultipleUsers" data-provider="loginData" finished-at="2025-09-09T13:55:44 IST" duration-ms="8743" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[locked_out_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at testcases.ValidLoginTest.loginWithMultipleUsers(ValidLoginTest.java:31)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1575)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithMultipleUsers -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.ValidLoginTest@451001e5]" started-at="2025-09-09T13:55:41 IST" name="tearDown" finished-at="2025-09-09T13:55:45 IST" duration-ms="3956" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.ValidLoginTest@451001e5]" started-at="2025-09-09T13:55:44 IST" name="tearDown" finished-at="2025-09-09T13:55:46 IST" duration-ms="2001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.ValidLoginTest@451001e5]" started-at="2025-09-09T13:55:44 IST" name="tearDown" finished-at="2025-09-09T13:55:46 IST" duration-ms="2055" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.ValidLoginTest -->
      <class name="testcases.InvalidLoginTest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:testcases.InvalidLoginTest@221a3fa4]" started-at="2025-09-09T13:55:14 IST" name="setUp" finished-at="2025-09-09T13:55:19 IST" duration-ms="5116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginWithInvalidCredentials(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testcases.InvalidLoginTest@221a3fa4]" started-at="2025-09-09T13:55:19 IST" name="loginWithInvalidCredentials" data-provider="negativeLoginData" finished-at="2025-09-09T13:55:20 IST" duration-ms="602" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong_pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Epic sadface: Username and password do not match any user in this service]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.InvalidLoginTest@221a3fa4]" started-at="2025-09-09T13:55:20 IST" name="tearDown" finished-at="2025-09-09T13:55:20 IST" duration-ms="691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:testcases.InvalidLoginTest@221a3fa4]" started-at="2025-09-09T13:55:20 IST" name="setUp" finished-at="2025-09-09T13:55:22 IST" duration-ms="1648" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginWithInvalidCredentials(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testcases.InvalidLoginTest@221a3fa4]" started-at="2025-09-09T13:55:22 IST" name="loginWithInvalidCredentials" data-provider="negativeLoginData" finished-at="2025-09-09T13:55:23 IST" duration-ms="1092" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[locked_out_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Epic sadface: Sorry, this user has been locked out.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.InvalidLoginTest@221a3fa4]" started-at="2025-09-09T13:55:23 IST" name="tearDown" finished-at="2025-09-09T13:55:24 IST" duration-ms="680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:testcases.InvalidLoginTest@221a3fa4]" started-at="2025-09-09T13:55:24 IST" name="setUp" finished-at="2025-09-09T13:55:26 IST" duration-ms="2441" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginWithInvalidCredentials(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testcases.InvalidLoginTest@221a3fa4]" started-at="2025-09-09T13:55:26 IST" name="loginWithInvalidCredentials" data-provider="negativeLoginData" finished-at="2025-09-09T13:55:27 IST" duration-ms="782" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[wrong_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong_pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Epic sadface: Username and password do not match any user in this service]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.InvalidLoginTest@221a3fa4]" started-at="2025-09-09T13:55:27 IST" name="tearDown" finished-at="2025-09-09T13:55:29 IST" duration-ms="1798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.InvalidLoginTest -->
      <class name="base.BaseTest">
        <test-method is-config="true" signature="setupExtent()[pri:0, instance:base.BaseTest@5f058f00]" started-at="2025-09-09T13:55:13 IST" name="setupExtent" finished-at="2025-09-09T13:55:13 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupExtent -->
        <test-method is-config="true" signature="tearDownExtent()[pri:0, instance:base.BaseTest@5f058f00]" started-at="2025-09-09T13:55:46 IST" name="tearDownExtent" finished-at="2025-09-09T13:55:47 IST" duration-ms="407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownExtent -->
      </class> <!-- base.BaseTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
